(define (make-register name)
  (let ((contents '*unassigned*)
        (is-tracing #f))
    (define (dispatch message)
      (cond ((eq? message 'get) contents)
            ((eq? message 'set)
             (lambda (value) 
               (if is-tracing
                   (begin
                     (display "Old value of register ")
                     (display name)
                     (display ":")
                     (display contents)
                     (newline)
                     (display "New value of register ")
                     (display name)
                     (display ":")
                     (display value)
                     (newline)))
               (set! contents value)))
            ((eq? message 'trace-on) (set! is-tracing #t))
            ((eq? message 'trace-off) (set! is-tracing #f))
            (else
             (error "Unknown request -- REGISTER" message))))
    dispatch))

; Add to dispatch method of make-new-machine

((eq? message 'trace-register)
 (lambda (reg-name)
   (if (member reg-name (dispatch 'get-register-names))
       (let ((reg ((dispatch 'get-register) reg-name)))
         (reg 'trace-on)
         (display "Now tracing register ")(display reg-name)
         (newline))
       (error "Register name not in machine-- TRACE-REGISTER" reg-name))))
((eq? message 'untrace-register)
 (lambda (reg-name)
   (if (member reg-name (dispatch 'get-register-names))
       (let ((reg ((dispatch 'get-register) reg-name)))
         (reg 'trace-off)
         (display "No longer tracing register ")(display reg-name)
         (newline))
       (error "Register name not in machine-- TRACE-REGISTER" reg-name))))
