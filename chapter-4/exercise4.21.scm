; a)

((lambda (n)
   ((lambda (fib)
      (fib fib n))
    (lambda (fib k)
      (cond ((= k 0) 0)
	    ((= k 1) 1)
	    (else (+ (fib fib (- k 1)) (fib fib (- k 2))))))))
 10)

; b)

(define (f x)
  ((lambda (even? odd?)
     (even? even? odd? x))
   (lambda (ev? od? n)
     (if (= n 0) true (od? ev? od? (- n 1))))
   (lambda (ev? od? n)
     (if (= n 0) false (ev? ev? od? (- n 1))))))
