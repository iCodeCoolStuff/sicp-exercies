(define (+ a b)
  (if (= a 0) b (inc (+ (dec a) b)))
)

(+ 4 5)

(if (= 4 0) 5 (inc (+ (dec 4) 5)))
(if (= 4 0) 5 (inc (+ (dec 4) 5)))
(if (#f) 5 (inc (+ (dec 4) 5)))
(if (#f) 5 (inc (+ (- 4 1) 5)))
(if (#f) 5 (inc (+ 3 5)))
(if (#f) 5 (inc 8))
(if (#f) 5 (+ 8 1))
(if (#f) 5 9)
9

(define (+ a b)
  (if (= a 0) b (+ (dec a) (inc b)))
)

(+ 4 5)

(if (= a 0) b (+ (dec 4) (inc 5)))
(if (#f) b (+ (dec 4) (inc 5)))
(if (#f) b (+ (- 4 1) (+ 5 1)))
(if (#f) b (+ 3 6))
(if (#f) b 9)
9

These processes are recursive because they do not contain the state of the process
within a few state varaibles.


; Correction

(define (+ a b)
  (if (= a 0) b (inc (+ (dec a) b)))
)

(+ 4 5)

(inc (+ (dec 3) 5))
(inc (inc (+ (dec 2) 5)))
(inc (inc (inc (+ (dec 1) 5))))
(inc (inc (inc (inc (+ (dec 0) 5)))))
(inc (inc (inc (inc  5))))
(inc (inc (inc 6)))
(inc (inc 7))
(inc 8)
9

(define (+ a b)
  (if (= a 0) b (+ (dec a) (inc b)))
)

(+ 4 5)
(+ (dec 4) (inc 5))
(+ 3 6)
(+ (dec 3) (inc 6))
(+ 2 7)
(+ (dec 2) (inc 7))
(+ 1 8)
(+ (dec 1) (inc 8))
(+ 0 9)
9

The first process is recursive because it defers inc operations in order to reach a base case of zero. The second process is iterative because it holds its two state variables in a and b.
